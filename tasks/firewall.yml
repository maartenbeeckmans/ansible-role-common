# https://github.com/ansibleguy/collection_nftables
---
- name: Installing NFTables
  ansible.builtin.package:
    name: 'nftables'
    state: present
- name: Ensure python3-nftables is installed
  ansible.builtin.package:
    name: 'python3-nftables'
    state: present
- name: Ensure python3-packaging is installed
  ansible.builtin.package:
    name: 'python3-packaging'
    state: present
- name: Installing NFTables python-module
  ansible.builtin.pip:
    name: 'ansibleguy-nftables'
    state: present
    extra_args: '--break-system-packages' #  @TODO package this
- name: Enabling and starting NFTables
  ansible.builtin.service:
    name: 'nftables.service'
    state: started
    enabled: true
- name: Ensure input chain exists
  ansibleguy.nftables.chain:
    table: inet-filter
    table_family: inet
    name: input
    type: filter
    hook: input
    priority: filter
    policy: accept
# - name: Ensure forward chain exists
#   ansibleguy.nftables.chain:
#     table: inet-filter
#     table_family: inet
#     name: forward
#     type: filter
#     hook: forward
#     priority: 0
#     policy: drop
# - name: Ensure output chain exists
#   ansibleguy.nftables.chain:
#     table: inet-filter
#     table_family: inet
#     name: output
#     type: filter
#     hook: output
#     priority: 0
#     policy: accept
# - name: Ensure input rule "Allow loopback traffic" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-lo'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'iifname lo accept comment "Allow loopback traffic"'
# - name: Ensure input rule "Reject local IPv4 traffic not on lo interface" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-reject_local_ipv4_traffic_not_on_lo_iface'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'iifname != "lo" ip daddr 127.0.0.0/8 reject comment "Reject local IPv4 traffic not on lo interface"'
# - name: Ensure input rule "Reject local IPv6 traffic not on lo interface" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-reject_local_ipv6_traffic_not_on_lo_iface'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'iifname != "lo" ip6 daddr ::1 reject comment "Reject local IPv6 traffic not on lo interface"'
# - name: Ensure input rule "Accept related established" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-accept_related_established_drop_invalid'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'ct state vmap { established : accept, related : accept } comment "Accept related established"'
# - name: Ensure input rule "Drop invalid" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-accept_related_established_drop_invalid'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'ct state vmap { invalid : drop } comment "Drop invalid"'
# - name: Ensure input rule "Accept icmp" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-icmp'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'icmp type echo-request limit rate 5/second accept comment "Accept icmp"'
# - name: Ensure input rule "Accept icmpv6" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-icmpv6'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'icmpv6 type echo-request limit rate 5/second accept comment "Accept icmpv6"'
# - name: Ensure input rule "Accept ipv6 neighbour discovery" exists
#   ansibleguy.nftables.rule_raw:
#     id: 'input-ipv6_neighbour_discovery'
#     chain: 'input'
#     table: 'inet-filter'
#     rule: 'icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept comment "Accept ipv6 neighbour discovery"'

...
